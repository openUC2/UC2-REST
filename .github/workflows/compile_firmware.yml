name: Compile ESP32 bin
'on':
  - push
  - pull_request
jobs:
  build-esp32:
    strategy:
      matrix:
        arduino-platform:
          - 'esp32:esp32'
        include:
          - arduino-platform: 'esp32:esp32'
            fqbn: 'esp32:esp32:esp32'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
      - name: Install platform
        run: >
          arduino-cli --additional-urls
          https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json
          core update-index

          arduino-cli --additional-urls
          https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json
          core install arduino:samd

          arduino-cli --additional-urls
          https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json
          core install esp32:esp32

          arduino-cli core update-index

          arduino-cli core install esp32:esp32
      - name: Compile Sketch
        run: |
          arduino-cli compile --fqbn esp32:esp32:esp32:PSRAM=enabled,PartitionScheme=min_spiffs,CPUFreq=240 ./ESP32/main/main.ino   --libraries ./ESP32/libraries/ --clean
          #arduino-cli compile --fqbn esp32:esp32:esp32:PSRAM=disabled,PartitionScheme=huge_app,CPUFreq=80  ./ESP32/main/main.ino --libraries ./ESP32/libraries/ --export-binaries
          dir ./ESP32/build/
          #IF EXIST ./ESP32/build/main.ino.elf DEL /F ./ESP32/build/main.ino.elf
          #IF EXIST ./ESP32/build/main.ino.map DEL /F ./ESP32/build/main.ino.map
          #IF EXIST ./ESP32/build/main.ino.partitions.bin DEL /F ./ESP32/build/main.ino.partitions.bin
          #IF EXIST ./ESP32/build/main.ino.bootloader.bin           DEL /F ./ESP32/build/main.ino.bootloader.bin
      - name: "Run if changes have been detected"
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: echo "Changes!"
      - name: auto-commit
        uses: stefanzweifel/git-auto-commit-action@v4
      - name: version
        run: echo $GITHUB_SHA | cut -c1-7
        id: version
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          #body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: reate ZIP
        uses: vimtor/action-zip@v1
        with:
          files: ./ESP32/build/
          dest: binaries.zip
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: binaries.zip
          asset_name: binaries.zip
          asset_content_type: application/zip
